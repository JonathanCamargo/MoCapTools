%% Example script detailing how Vicon and C3D functions can be used 

%% User starts with:
% static.c3d
% trial.c3d
%
% XML Template Files required for OpenSim
% scale.xml: template for scaling setup file 
%   model.osim: template for model file, referenced by scale.xml
%   markers.xml: description of marker placement, referenced by scale.xml
% ik.xml: template for inverse kinematics setup file
% 
% Examples of these files can be generated by OpenSim by using the GUI. 

staticC3D = './ExampleData/static_01.c3d';
c3dFile = './ExampleData/LevelGround_ccw_fast_01.c3d';
unscaledOsim = './ExampleData/KB_LowerBody.osim';
scaleXml = './ExampleData/ScaleSetup.xml';
ikXml = './ExampleData/IKSetup.xml';

outputDir = './ExampleData/generated';
staticTrc = fullfile(outputDir, 'static_01.trc');
scaledOsim = fullfile(outputDir, 'ExampleModel.osim');

% VerboseLevel - 0 (minimal), 1 (normal), 2 (debug mode)
verboseLevel = 1;

% ErrorThresholdLow - threshold of IK error above which bad marker data will be deleted. 
errorThresholdLow = 0.04;

% ErrorThresholdHigh - threshold of IK error above which marker data will be considered bad.
errorThresholdHigh = 0.06;

mkdir(outputDir);
%% Set up the static trial so that we can use a scaled model for IK 
% if the static trial has no gaps: 
staticData = Vicon.C3DtoTRC(staticC3D);
Osim.writeTRC(staticData, 'FilePath', staticTrc);

% if the static trial does have gaps, use the unscaled osim file for segment info: 
    %staticMarkerData = Vicon.ExtractMarkers(staticC3D);
    %staticMarkerData = Vicon.GapFill(staticMarkerData, unscaledOsim);
    %markers2TRC(staticMarkerData, 'FilePath', staticTrc);

Osim.Scale(staticTrc, scaleXml, scaledOsim);
clc;
%% Gap Fill a C3D file
% show the number of gaps present at the beginning
fprintf('Gap info of file: [nGapsx2 double]\n');
markerStruct = Vicon.ExtractMarkers(c3dFile); % struct of marker data, equivalent to a trc file
disp(Vicon.findGaps(markerStruct))

[markerStruct, errorTable] = Vicon.IterativeGapFilling(c3dFile,ikXml, ...
    'VerboseLevel', verboseLevel, ...
    'ErrorThresholdHigh', errorThresholdHigh, ...
    'ErrorThresholdLow', errorThresholdLow, ...
    'MaxIterations', 2);
% markerStruct and errorTable are saved to OutputDir

% view IK marker errors, more info in Osim example script
Osim.viewIKError(errorTable);

% display the gaps in each marker, there should be none
fprintf('Gap info of file after gap filling:\n');
disp(Vicon.findGaps(markerStruct))

fprintf('Look at the history in the command window to see gap info and gap filling results.\n');

%% Continue with the gap filled data
% write back to a c3d
fprintf('Writing .c3d file...\n');
[~, trialname, ~] = fileparts(c3dFile);
filledC3D = fullfile(outputDir, [trialname '_filled.c3d']);
Vicon.markerstoC3D(markerStruct, c3dFile, filledC3D);

% create a trc file 
fprintf('Writing .trc file...\n');
trcFile = Osim.markers2TRC(markerStruct, 'FilePath', fullfile(outputDir, trialname), 'FilterFreq', 6);

% create an mot file
fprintf('Writing .mot file...\n');
motData = Vicon.C3DtoMOT(filledC3D, 'CombinedForceplates', 5:6, 'FilterFreq', 15, 'DeviceNames', [compose('Treadmill_%c', 'RL'), compose('Amp%d', 1:6), {'Combined'}]);
Osim.writeMOT(motData, 'FilePath', fullfile(outputDir, trialname));
